{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\.cursor-tutor\\\\netflix-clone\\\\src\\\\components\\\\WatchParty.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaUsers, FaCopy, FaUserPlus, FaComments, FaMicrophone, FaMicrophoneSlash, FaSmile } from 'react-icons/fa';\nimport watchPartyService from '../services/watchPartyService';\nimport './WatchParty.css';\n\n// Main component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WatchParty = ({\n  movieId,\n  videoRef,\n  isHost = true\n}) => {\n  _s();\n  const [partyCode, setPartyCode] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [participants, setParticipants] = useState([{\n    id: 1,\n    username: 'You (Host)',\n    isHost: true,\n    isSelf: true\n  }]);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [showChat, setShowChat] = useState(true);\n  const [showParticipants, setShowParticipants] = useState(true);\n  const [micEnabled, setMicEnabled] = useState(false);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [currentReaction, setCurrentReaction] = useState(null);\n  const chatContainerRef = useRef(null);\n  const chatInputRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Common emojis for reactions\n  const commonEmojis = ['👍', '❤️', '😂', '😮', '😢', '👏', '🔥', '🤔'];\n\n  // Generate a random party code on mount and initialize watch party\n  useEffect(() => {\n    const randomCode = Math.random().toString(36).substring(2, 8).toUpperCase();\n    setPartyCode(randomCode);\n\n    // Initialize watch party connection\n    initializeWatchParty(randomCode);\n    return () => {\n      // Clean up watch party connection on unmount\n      watchPartyService.disconnect();\n    };\n  }, []);\n\n  // Auto-scroll chat to bottom when new messages arrive\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n\n  // Set up video event listeners\n  useEffect(() => {\n    if (videoRef && videoRef.current) {\n      const player = videoRef.current.getInternalPlayer();\n      if (player) {\n        // Add event listeners to the video player\n        player.addEventListener('play', handlePlay);\n        player.addEventListener('pause', handlePause);\n        player.addEventListener('seeked', handleSeek);\n        return () => {\n          // Remove event listeners when component unmounts\n          player.removeEventListener('play', handlePlay);\n          player.removeEventListener('pause', handlePause);\n          player.removeEventListener('seeked', handleSeek);\n        };\n      }\n    }\n  }, [videoRef, isConnected]);\n\n  // Initialize watch party\n  const initializeWatchParty = roomCode => {\n    console.log('Initializing watch party with code:', roomCode);\n\n    // Set up event handlers\n    watchPartyService.on('onUserJoined', handleUserJoined);\n    watchPartyService.on('onUserLeft', handleUserLeft);\n    watchPartyService.on('onPlaybackUpdate', handlePlaybackUpdate);\n    watchPartyService.on('onChatMessage', handleChatMessage);\n    watchPartyService.on('onReaction', handleReaction);\n    watchPartyService.on('onConnectionChange', connected => {\n      console.log('Connection status changed:', connected);\n      setIsConnected(connected);\n    });\n    watchPartyService.on('onError', error => console.error('Watch party error:', error));\n\n    // Connect to watch party\n    const connected = watchPartyService.connect(roomCode, 'You (Host)', isHost);\n    console.log('Connected to watch party:', connected);\n\n    // Set connected state immediately to allow chat functionality\n    setIsConnected(true);\n\n    // Add welcome message\n    setChatMessages([{\n      id: `system-welcome`,\n      type: 'system',\n      content: `Welcome to the watch party! Share code ${roomCode} with friends to invite them.`,\n      timestamp: new Date().toISOString()\n    }]);\n  };\n\n  // Handle user joined event\n  const handleUserJoined = data => {\n    // Add user to participants list if they're not already in it\n    if (!participants.some(p => p.username === data.username)) {\n      setParticipants(prev => [...prev, {\n        id: data.userId,\n        username: data.username,\n        isHost: data.isHost,\n        isSelf: false\n      }]);\n\n      // Add system message to chat\n      setChatMessages(prev => [...prev, {\n        id: `system-${Date.now()}`,\n        type: 'system',\n        content: `${data.username} joined the watch party`,\n        timestamp: data.timestamp\n      }]);\n\n      // Hide participants list after 3 or more users have joined (including host)\n      if (participants.length >= 2) {\n        setTimeout(() => {\n          setShowParticipants(false);\n        }, 2000);\n      }\n    }\n  };\n\n  // Handle user left event\n  const handleUserLeft = data => {\n    // Remove user from participants list\n    setParticipants(prev => prev.filter(p => p.id !== data.userId));\n\n    // Add system message to chat\n    setChatMessages(prev => [...prev, {\n      id: `system-${Date.now()}`,\n      type: 'system',\n      content: `${data.username} left the watch party`,\n      timestamp: data.timestamp\n    }]);\n  };\n\n  // Handle playback update event\n  const handlePlaybackUpdate = data => {\n    if (videoRef && videoRef.current) {\n      const player = videoRef.current.getInternalPlayer();\n      if (player) {\n        // Update video playback state\n        if (data.action === 'play') {\n          player.play();\n        } else if (data.action === 'pause') {\n          player.pause();\n        } else if (data.action === 'seek') {\n          player.currentTime = data.currentTime;\n        }\n\n        // Add system message to chat\n        setChatMessages(prev => [...prev, {\n          id: `system-${Date.now()}`,\n          type: 'system',\n          content: `${data.username} ${data.action}ed the video`,\n          timestamp: data.timestamp\n        }]);\n      }\n    }\n  };\n\n  // Handle chat message event\n  const handleChatMessage = data => {\n    setChatMessages(prev => [...prev, {\n      id: data.messageId,\n      type: 'message',\n      sender: data.username,\n      content: data.message,\n      timestamp: data.timestamp\n    }]);\n  };\n\n  // Handle reaction event\n  const handleReaction = data => {\n    // Show reaction animation\n    setCurrentReaction({\n      emoji: data.emoji,\n      username: data.username,\n      timestamp: Date.now()\n    });\n\n    // Hide reaction after 2 seconds\n    setTimeout(() => {\n      setCurrentReaction(null);\n    }, 2000);\n  };\n\n  // Handle video playback events\n  const handlePlay = () => {\n    if (isConnected) {\n      watchPartyService.sendPlaybackUpdate('play', videoRef.current.getCurrentTime());\n    }\n  };\n  const handlePause = () => {\n    if (isConnected) {\n      watchPartyService.sendPlaybackUpdate('pause', videoRef.current.getCurrentTime());\n    }\n  };\n  const handleSeek = () => {\n    if (isConnected) {\n      watchPartyService.sendPlaybackUpdate('seek', videoRef.current.getCurrentTime());\n    }\n  };\n\n  // Handle chat input\n  const handleChatSubmit = e => {\n    e.preventDefault();\n    console.log('Chat submit triggered');\n\n    // Always allow sending messages even if connection status is uncertain\n    if (messageInput.trim()) {\n      try {\n        console.log('Sending chat message:', messageInput);\n\n        // Send the message through the service if connected\n        if (isConnected) {\n          watchPartyService.sendChatMessage(messageInput);\n        } else {\n          console.log('Not connected, but still adding message to local state');\n        }\n\n        // Always add the message to our local state immediately\n        setChatMessages(prev => [...prev, {\n          id: `msg-${Date.now()}`,\n          type: 'message',\n          sender: 'You (Host)',\n          content: messageInput,\n          timestamp: new Date().toISOString()\n        }]);\n\n        // Clear the input field\n        setMessageInput('');\n\n        // Force connection if not already connected\n        if (!isConnected) {\n          console.log('Attempting to reconnect...');\n          const randomCode = Math.random().toString(36).substring(2, 8).toUpperCase();\n          initializeWatchParty(randomCode);\n        }\n      } catch (error) {\n        console.error('Error sending chat message:', error);\n        alert('Failed to send message. Please try again.');\n      }\n    } else {\n      console.log('Cannot send empty message');\n    }\n  };\n\n  // Handle reaction click\n  const handleReactionClick = emoji => {\n    if (isConnected) {\n      watchPartyService.sendReaction(emoji);\n    }\n    setShowEmojiPicker(false);\n  };\n\n  // Copy party code to clipboard\n  const copyPartyCode = () => {\n    navigator.clipboard.writeText(partyCode);\n    alert(`Party code ${partyCode} copied to clipboard!`);\n  };\n\n  // Format timestamp\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Toggle microphone\n  const toggleMicrophone = () => {\n    setMicEnabled(!micEnabled);\n    // In a real implementation, this would enable/disable the user's microphone\n  };\n\n  // Add a function to focus the chat input\n  const focusChatInput = () => {\n    if (chatInputRef.current) {\n      chatInputRef.current.focus();\n    }\n  };\n\n  // Toggle participants list\n  const toggleParticipants = e => {\n    if (e) e.stopPropagation();\n    setShowParticipants(!showParticipants);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watch-party-container\",\n    onClick: e => {\n      // Prevent clicks in the watch party container from affecting the video player\n      e.stopPropagation();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"party-info-bar\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"party-info\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(FaUsers, {\n          className: \"party-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Watch Party\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"party-code\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: partyCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"copy-button\",\n            onClick: e => {\n              e.stopPropagation();\n              copyPartyCode();\n            },\n            children: /*#__PURE__*/_jsxDEV(FaCopy, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"party-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-button ${showChat ? 'active' : ''}`,\n          onClick: e => {\n            e.stopPropagation();\n            setShowChat(!showChat);\n          },\n          children: /*#__PURE__*/_jsxDEV(FaComments, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-button ${showParticipants ? 'active' : ''}`,\n          onClick: toggleParticipants,\n          children: [/*#__PURE__*/_jsxDEV(FaUsers, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"participant-count\",\n            children: participants.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-button ${micEnabled ? 'active' : ''}`,\n          onClick: e => {\n            e.stopPropagation();\n            toggleMicrophone();\n          },\n          children: micEnabled ? /*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(FaMicrophoneSlash, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button invite-button\",\n          onClick: e => {\n            e.stopPropagation();\n            alert(`Invite your friends using code: ${partyCode}`);\n          },\n          children: [/*#__PURE__*/_jsxDEV(FaUserPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Invite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), showChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-sidebar\",\n      onClick: e => {\n        // Prevent clicks in the chat sidebar from affecting the video player\n        e.stopPropagation();\n      },\n      children: [showParticipants && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participants-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Participants (\", participants.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"participants-list\",\n          children: participants.map(participant => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"participant\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `participant-name ${participant.isHost ? 'host' : ''}`,\n              children: [participant.username, participant.isHost && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"host-badge\",\n                children: \"Host\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 21\n            }, this)\n          }, participant.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-section ${!showParticipants ? 'full-height' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          ref: chatContainerRef,\n          onClick: e => e.stopPropagation(),\n          children: chatMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message ${message.type === 'system' ? 'system-message' : ''}`,\n            children: [message.type === 'message' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-sender\",\n                children: message.sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: formatTimestamp(message.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 19\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chat-input-form\",\n          onSubmit: e => {\n            e.preventDefault();\n            e.stopPropagation();\n            handleChatSubmit(e);\n          },\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-input-container\",\n            onClick: e => e.stopPropagation(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: messageInput,\n              onChange: e => {\n                e.stopPropagation();\n                console.log('Input changed:', e.target.value);\n                setMessageInput(e.target.value);\n              },\n              placeholder: \"Type a message...\",\n              className: \"chat-input\",\n              autoComplete: \"off\",\n              ref: chatInputRef,\n              onClick: e => {\n                e.stopPropagation();\n                focusChatInput();\n              },\n              onKeyDown: e => {\n                e.stopPropagation();\n                console.log('Key pressed:', e.key);\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleChatSubmit(e);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"emoji-button\",\n              onClick: e => {\n                e.stopPropagation();\n                setShowEmojiPicker(!showEmojiPicker);\n              },\n              children: /*#__PURE__*/_jsxDEV(FaSmile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"emoji-picker\",\n              onClick: e => e.stopPropagation(),\n              children: commonEmojis.map(emoji => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"emoji\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleReactionClick(emoji);\n                },\n                children: emoji\n              }, emoji, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: e => {\n              e.stopPropagation();\n              handleChatSubmit(e);\n            },\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }, this), currentReaction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reaction-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reaction-emoji\",\n        children: currentReaction.emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reaction-username\",\n        children: currentReaction.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 5\n  }, this);\n};\n_s(WatchParty, \"qJSNp8oQB5AL1/98HB6D9WW1kDU=\", false, function () {\n  return [useNavigate];\n});\n_c = WatchParty;\nexport default WatchParty;\nvar _c;\n$RefreshReg$(_c, \"WatchParty\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","FaUsers","FaCopy","FaUserPlus","FaComments","FaMicrophone","FaMicrophoneSlash","FaSmile","watchPartyService","jsxDEV","_jsxDEV","WatchParty","movieId","videoRef","isHost","_s","partyCode","setPartyCode","isConnected","setIsConnected","participants","setParticipants","id","username","isSelf","chatMessages","setChatMessages","messageInput","setMessageInput","showChat","setShowChat","showParticipants","setShowParticipants","micEnabled","setMicEnabled","showEmojiPicker","setShowEmojiPicker","currentReaction","setCurrentReaction","chatContainerRef","chatInputRef","navigate","commonEmojis","randomCode","Math","random","toString","substring","toUpperCase","initializeWatchParty","disconnect","current","scrollTop","scrollHeight","player","getInternalPlayer","addEventListener","handlePlay","handlePause","handleSeek","removeEventListener","roomCode","console","log","on","handleUserJoined","handleUserLeft","handlePlaybackUpdate","handleChatMessage","handleReaction","connected","error","connect","type","content","timestamp","Date","toISOString","data","some","p","prev","userId","now","length","setTimeout","filter","action","play","pause","currentTime","messageId","sender","message","emoji","sendPlaybackUpdate","getCurrentTime","handleChatSubmit","e","preventDefault","trim","sendChatMessage","alert","handleReactionClick","sendReaction","copyPartyCode","navigator","clipboard","writeText","formatTimestamp","date","toLocaleTimeString","hour","minute","toggleMicrophone","focusChatInput","focus","toggleParticipants","stopPropagation","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","map","participant","ref","onSubmit","value","onChange","target","placeholder","autoComplete","onKeyDown","key","shiftKey","_c","$RefreshReg$"],"sources":["C:/Users/hp/.cursor-tutor/netflix-clone/src/components/WatchParty.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaUsers, FaCopy, FaUserPlus, FaComments, FaMicrophone, FaMicrophoneSlash, FaSmile } from 'react-icons/fa';\nimport watchPartyService from '../services/watchPartyService';\nimport './WatchParty.css';\n\n// Main component\nconst WatchParty = ({ movieId, videoRef, isHost = true }) => {\n  const [partyCode, setPartyCode] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [participants, setParticipants] = useState([\n    { id: 1, username: 'You (Host)', isHost: true, isSelf: true }\n  ]);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [showChat, setShowChat] = useState(true);\n  const [showParticipants, setShowParticipants] = useState(true);\n  const [micEnabled, setMicEnabled] = useState(false);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [currentReaction, setCurrentReaction] = useState(null);\n  \n  const chatContainerRef = useRef(null);\n  const chatInputRef = useRef(null);\n  const navigate = useNavigate();\n  \n  // Common emojis for reactions\n  const commonEmojis = ['👍', '❤️', '😂', '😮', '😢', '👏', '🔥', '🤔'];\n  \n  // Generate a random party code on mount and initialize watch party\n  useEffect(() => {\n    const randomCode = Math.random().toString(36).substring(2, 8).toUpperCase();\n    setPartyCode(randomCode);\n    \n    // Initialize watch party connection\n    initializeWatchParty(randomCode);\n    \n    return () => {\n      // Clean up watch party connection on unmount\n      watchPartyService.disconnect();\n    };\n  }, []);\n  \n  // Auto-scroll chat to bottom when new messages arrive\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n  \n  // Set up video event listeners\n  useEffect(() => {\n    if (videoRef && videoRef.current) {\n      const player = videoRef.current.getInternalPlayer();\n      \n      if (player) {\n        // Add event listeners to the video player\n        player.addEventListener('play', handlePlay);\n        player.addEventListener('pause', handlePause);\n        player.addEventListener('seeked', handleSeek);\n        \n        return () => {\n          // Remove event listeners when component unmounts\n          player.removeEventListener('play', handlePlay);\n          player.removeEventListener('pause', handlePause);\n          player.removeEventListener('seeked', handleSeek);\n        };\n      }\n    }\n  }, [videoRef, isConnected]);\n  \n  // Initialize watch party\n  const initializeWatchParty = (roomCode) => {\n    console.log('Initializing watch party with code:', roomCode);\n    \n    // Set up event handlers\n    watchPartyService.on('onUserJoined', handleUserJoined);\n    watchPartyService.on('onUserLeft', handleUserLeft);\n    watchPartyService.on('onPlaybackUpdate', handlePlaybackUpdate);\n    watchPartyService.on('onChatMessage', handleChatMessage);\n    watchPartyService.on('onReaction', handleReaction);\n    watchPartyService.on('onConnectionChange', (connected) => {\n      console.log('Connection status changed:', connected);\n      setIsConnected(connected);\n    });\n    watchPartyService.on('onError', (error) => console.error('Watch party error:', error));\n    \n    // Connect to watch party\n    const connected = watchPartyService.connect(roomCode, 'You (Host)', isHost);\n    console.log('Connected to watch party:', connected);\n    \n    // Set connected state immediately to allow chat functionality\n    setIsConnected(true);\n    \n    // Add welcome message\n    setChatMessages([\n      {\n        id: `system-welcome`,\n        type: 'system',\n        content: `Welcome to the watch party! Share code ${roomCode} with friends to invite them.`,\n        timestamp: new Date().toISOString()\n      }\n    ]);\n  };\n  \n  // Handle user joined event\n  const handleUserJoined = (data) => {\n    // Add user to participants list if they're not already in it\n    if (!participants.some(p => p.username === data.username)) {\n      setParticipants(prev => [\n        ...prev,\n        { id: data.userId, username: data.username, isHost: data.isHost, isSelf: false }\n      ]);\n      \n      // Add system message to chat\n      setChatMessages(prev => [\n        ...prev,\n        {\n          id: `system-${Date.now()}`,\n          type: 'system',\n          content: `${data.username} joined the watch party`,\n          timestamp: data.timestamp\n        }\n      ]);\n      \n      // Hide participants list after 3 or more users have joined (including host)\n      if (participants.length >= 2) {\n        setTimeout(() => {\n          setShowParticipants(false);\n        }, 2000);\n      }\n    }\n  };\n  \n  // Handle user left event\n  const handleUserLeft = (data) => {\n    // Remove user from participants list\n    setParticipants(prev => prev.filter(p => p.id !== data.userId));\n    \n    // Add system message to chat\n    setChatMessages(prev => [\n      ...prev,\n      {\n        id: `system-${Date.now()}`,\n        type: 'system',\n        content: `${data.username} left the watch party`,\n        timestamp: data.timestamp\n      }\n    ]);\n  };\n  \n  // Handle playback update event\n  const handlePlaybackUpdate = (data) => {\n    if (videoRef && videoRef.current) {\n      const player = videoRef.current.getInternalPlayer();\n      \n      if (player) {\n        // Update video playback state\n        if (data.action === 'play') {\n          player.play();\n        } else if (data.action === 'pause') {\n          player.pause();\n        } else if (data.action === 'seek') {\n          player.currentTime = data.currentTime;\n        }\n        \n        // Add system message to chat\n        setChatMessages(prev => [\n          ...prev,\n          {\n            id: `system-${Date.now()}`,\n            type: 'system',\n            content: `${data.username} ${data.action}ed the video`,\n            timestamp: data.timestamp\n          }\n        ]);\n      }\n    }\n  };\n  \n  // Handle chat message event\n  const handleChatMessage = (data) => {\n    setChatMessages(prev => [\n      ...prev,\n      {\n        id: data.messageId,\n        type: 'message',\n        sender: data.username,\n        content: data.message,\n        timestamp: data.timestamp\n      }\n    ]);\n  };\n  \n  // Handle reaction event\n  const handleReaction = (data) => {\n    // Show reaction animation\n    setCurrentReaction({\n      emoji: data.emoji,\n      username: data.username,\n      timestamp: Date.now()\n    });\n    \n    // Hide reaction after 2 seconds\n    setTimeout(() => {\n      setCurrentReaction(null);\n    }, 2000);\n  };\n  \n  // Handle video playback events\n  const handlePlay = () => {\n    if (isConnected) {\n      watchPartyService.sendPlaybackUpdate('play', videoRef.current.getCurrentTime());\n    }\n  };\n  \n  const handlePause = () => {\n    if (isConnected) {\n      watchPartyService.sendPlaybackUpdate('pause', videoRef.current.getCurrentTime());\n    }\n  };\n  \n  const handleSeek = () => {\n    if (isConnected) {\n      watchPartyService.sendPlaybackUpdate('seek', videoRef.current.getCurrentTime());\n    }\n  };\n  \n  // Handle chat input\n  const handleChatSubmit = (e) => {\n    e.preventDefault();\n    console.log('Chat submit triggered');\n    \n    // Always allow sending messages even if connection status is uncertain\n    if (messageInput.trim()) {\n      try {\n        console.log('Sending chat message:', messageInput);\n        \n        // Send the message through the service if connected\n        if (isConnected) {\n          watchPartyService.sendChatMessage(messageInput);\n        } else {\n          console.log('Not connected, but still adding message to local state');\n        }\n        \n        // Always add the message to our local state immediately\n        setChatMessages(prev => [\n          ...prev,\n          {\n            id: `msg-${Date.now()}`,\n            type: 'message',\n            sender: 'You (Host)',\n            content: messageInput,\n            timestamp: new Date().toISOString()\n          }\n        ]);\n        \n        // Clear the input field\n        setMessageInput('');\n        \n        // Force connection if not already connected\n        if (!isConnected) {\n          console.log('Attempting to reconnect...');\n          const randomCode = Math.random().toString(36).substring(2, 8).toUpperCase();\n          initializeWatchParty(randomCode);\n        }\n      } catch (error) {\n        console.error('Error sending chat message:', error);\n        alert('Failed to send message. Please try again.');\n      }\n    } else {\n      console.log('Cannot send empty message');\n    }\n  };\n  \n  // Handle reaction click\n  const handleReactionClick = (emoji) => {\n    if (isConnected) {\n      watchPartyService.sendReaction(emoji);\n    }\n    \n    setShowEmojiPicker(false);\n  };\n  \n  // Copy party code to clipboard\n  const copyPartyCode = () => {\n    navigator.clipboard.writeText(partyCode);\n    alert(`Party code ${partyCode} copied to clipboard!`);\n  };\n  \n  // Format timestamp\n  const formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n  \n  // Toggle microphone\n  const toggleMicrophone = () => {\n    setMicEnabled(!micEnabled);\n    // In a real implementation, this would enable/disable the user's microphone\n  };\n  \n  // Add a function to focus the chat input\n  const focusChatInput = () => {\n    if (chatInputRef.current) {\n      chatInputRef.current.focus();\n    }\n  };\n  \n  // Toggle participants list\n  const toggleParticipants = (e) => {\n    if (e) e.stopPropagation();\n    setShowParticipants(!showParticipants);\n  };\n  \n  return (\n    <div \n      className=\"watch-party-container\"\n      onClick={(e) => {\n        // Prevent clicks in the watch party container from affecting the video player\n        e.stopPropagation();\n      }}\n    >\n      {/* Party info bar */}\n      <div \n        className=\"party-info-bar\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div \n          className=\"party-info\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          <FaUsers className=\"party-icon\" />\n          <span>Watch Party</span>\n          <div className=\"party-code\">\n            <span>{partyCode}</span>\n            <button \n              className=\"copy-button\" \n              onClick={(e) => {\n                e.stopPropagation();\n                copyPartyCode();\n              }}\n            >\n              <FaCopy />\n            </button>\n          </div>\n        </div>\n        <div className=\"party-controls\">\n          <button \n            className={`control-button ${showChat ? 'active' : ''}`}\n            onClick={(e) => {\n              e.stopPropagation();\n              setShowChat(!showChat);\n            }}\n          >\n            <FaComments />\n          </button>\n          <button \n            className={`control-button ${showParticipants ? 'active' : ''}`}\n            onClick={toggleParticipants}\n          >\n            <FaUsers />\n            <span className=\"participant-count\">{participants.length}</span>\n          </button>\n          <button \n            className={`control-button ${micEnabled ? 'active' : ''}`}\n            onClick={(e) => {\n              e.stopPropagation();\n              toggleMicrophone();\n            }}\n          >\n            {micEnabled ? <FaMicrophone /> : <FaMicrophoneSlash />}\n          </button>\n          <button \n            className=\"control-button invite-button\"\n            onClick={(e) => {\n              e.stopPropagation();\n              alert(`Invite your friends using code: ${partyCode}`);\n            }}\n          >\n            <FaUserPlus />\n            <span>Invite</span>\n          </button>\n        </div>\n      </div>\n      \n      {/* Chat sidebar */}\n      {showChat && (\n        <div \n          className=\"chat-sidebar\" \n          onClick={(e) => {\n            // Prevent clicks in the chat sidebar from affecting the video player\n            e.stopPropagation();\n          }}\n        >\n          {showParticipants && (\n            <div className=\"participants-section\">\n              <h3>Participants ({participants.length})</h3>\n              <ul className=\"participants-list\">\n                {participants.map(participant => (\n                  <li key={participant.id} className=\"participant\">\n                    <span className={`participant-name ${participant.isHost ? 'host' : ''}`}>\n                      {participant.username}\n                      {participant.isHost && <span className=\"host-badge\">Host</span>}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          \n          <div className={`chat-section ${!showParticipants ? 'full-height' : ''}`}>\n            <h3>Chat</h3>\n            <div \n              className=\"chat-messages\" \n              ref={chatContainerRef}\n              onClick={(e) => e.stopPropagation()}\n            >\n              {chatMessages.map(message => (\n                <div \n                  key={message.id} \n                  className={`chat-message ${message.type === 'system' ? 'system-message' : ''}`}\n                >\n                  {message.type === 'message' && (\n                    <div className=\"message-header\">\n                      <span className=\"message-sender\">{message.sender}</span>\n                      <span className=\"message-time\">{formatTimestamp(message.timestamp)}</span>\n                    </div>\n                  )}\n                  <div className=\"message-content\">{message.content}</div>\n                </div>\n              ))}\n            </div>\n            \n            {/* Chat input form */}\n            <form \n              className=\"chat-input-form\" \n              onSubmit={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                handleChatSubmit(e);\n              }}\n              onClick={(e) => e.stopPropagation()}\n            >\n              <div \n                className=\"chat-input-container\"\n                onClick={(e) => e.stopPropagation()}\n              >\n                <input\n                  type=\"text\"\n                  value={messageInput}\n                  onChange={(e) => {\n                    e.stopPropagation();\n                    console.log('Input changed:', e.target.value);\n                    setMessageInput(e.target.value);\n                  }}\n                  placeholder=\"Type a message...\"\n                  className=\"chat-input\"\n                  autoComplete=\"off\"\n                  ref={chatInputRef}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    focusChatInput();\n                  }}\n                  onKeyDown={(e) => {\n                    e.stopPropagation();\n                    console.log('Key pressed:', e.key);\n                    if (e.key === 'Enter' && !e.shiftKey) {\n                      e.preventDefault();\n                      handleChatSubmit(e);\n                    }\n                  }}\n                />\n                <button \n                  type=\"button\" \n                  className=\"emoji-button\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setShowEmojiPicker(!showEmojiPicker);\n                  }}\n                >\n                  <FaSmile />\n                </button>\n                {showEmojiPicker && (\n                  <div \n                    className=\"emoji-picker\"\n                    onClick={(e) => e.stopPropagation()}\n                  >\n                    {commonEmojis.map(emoji => (\n                      <button\n                        key={emoji}\n                        type=\"button\"\n                        className=\"emoji\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleReactionClick(emoji);\n                        }}\n                      >\n                        {emoji}\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n              <button \n                type=\"button\" \n                className=\"send-button\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleChatSubmit(e);\n                }}\n              >\n                Send\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n      \n      {/* Reaction display */}\n      {currentReaction && (\n        <div className=\"reaction-display\">\n          <div className=\"reaction-emoji\">{currentReaction.emoji}</div>\n          <div className=\"reaction-username\">{currentReaction.username}</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WatchParty; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}