{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\.cursor-tutor\\\\netflix-clone\\\\src\\\\components\\\\WatchParty.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaUsers, FaCopy, FaUserPlus, FaComments, FaMicrophone, FaMicrophoneSlash, FaSmile } from 'react-icons/fa';\nimport './WatchParty.css';\n\n// Mock WebSocket for demo purposes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MockWebSocket {\n  constructor(url) {\n    this.url = url;\n    this.onmessage = null;\n    this.onopen = null;\n    this.onclose = null;\n    this.onerror = null;\n\n    // Simulate connection opening\n    setTimeout(() => {\n      if (this.onopen) this.onopen({\n        type: 'open'\n      });\n    }, 500);\n  }\n  send(data) {\n    console.log('WebSocket message sent:', data);\n\n    // Simulate receiving a response\n    setTimeout(() => {\n      if (this.onmessage) {\n        const parsedData = JSON.parse(data);\n\n        // Simulate different types of responses\n        if (parsedData.type === 'join') {\n          this.simulateUserJoined(parsedData.username);\n        } else if (parsedData.type === 'playback') {\n          this.simulatePlaybackSync(parsedData);\n        } else if (parsedData.type === 'chat') {\n          this.simulateChatMessage(parsedData);\n        } else if (parsedData.type === 'reaction') {\n          this.simulateReaction(parsedData);\n        }\n      }\n    }, 300);\n  }\n  close() {\n    if (this.onclose) this.onclose({\n      type: 'close'\n    });\n  }\n\n  // Simulation helpers\n  simulateUserJoined(username) {\n    const response = {\n      type: 'user_joined',\n      username,\n      timestamp: new Date().toISOString(),\n      userId: Math.floor(Math.random() * 1000)\n    };\n    if (this.onmessage) {\n      this.onmessage({\n        data: JSON.stringify(response)\n      });\n    }\n  }\n  simulatePlaybackSync(data) {\n    const response = {\n      type: 'playback_update',\n      action: data.action,\n      currentTime: data.currentTime,\n      username: data.username,\n      timestamp: new Date().toISOString()\n    };\n    if (this.onmessage) {\n      this.onmessage({\n        data: JSON.stringify(response)\n      });\n    }\n  }\n  simulateChatMessage(data) {\n    const response = {\n      type: 'chat_message',\n      message: data.message,\n      username: data.username,\n      timestamp: new Date().toISOString(),\n      messageId: Math.floor(Math.random() * 10000)\n    };\n    if (this.onmessage) {\n      this.onmessage({\n        data: JSON.stringify(response)\n      });\n    }\n  }\n  simulateReaction(data) {\n    const response = {\n      type: 'reaction',\n      emoji: data.emoji,\n      username: data.username,\n      timestamp: new Date().toISOString()\n    };\n    if (this.onmessage) {\n      this.onmessage({\n        data: JSON.stringify(response)\n      });\n    }\n  }\n}\n\n// Main component\nconst WatchParty = ({\n  movieId,\n  videoRef,\n  isHost = true\n}) => {\n  _s();\n  const [partyCode, setPartyCode] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [participants, setParticipants] = useState([{\n    id: 1,\n    username: 'You (Host)',\n    isHost: true,\n    isSelf: true\n  }]);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [showChat, setShowChat] = useState(true);\n  const [micEnabled, setMicEnabled] = useState(false);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [currentReaction, setCurrentReaction] = useState(null);\n  const socketRef = useRef(null);\n  const chatContainerRef = useRef(null);\n  const navigate = useNavigate();\n\n  // Common emojis for reactions\n  const commonEmojis = ['👍', '❤️', '😂', '😮', '😢', '👏', '🔥', '🤔'];\n\n  // Generate a random party code on mount\n  useEffect(() => {\n    const randomCode = Math.random().toString(36).substring(2, 8).toUpperCase();\n    setPartyCode(randomCode);\n\n    // Initialize WebSocket connection\n    initializeWebSocket(randomCode);\n    return () => {\n      // Clean up WebSocket on unmount\n      if (socketRef.current) {\n        socketRef.current.close();\n      }\n    };\n  }, []);\n\n  // Auto-scroll chat to bottom when new messages arrive\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatMessages]);\n\n  // Initialize WebSocket connection\n  const initializeWebSocket = roomCode => {\n    // In a real implementation, this would connect to your WebSocket server\n    // For demo purposes, we're using a mock WebSocket\n    socketRef.current = new MockWebSocket(`wss://api.example.com/watchparty/${roomCode}`);\n    socketRef.current.onopen = () => {\n      console.log('WebSocket connection established');\n      setIsConnected(true);\n\n      // Join the room\n      sendWebSocketMessage({\n        type: 'join',\n        username: 'You (Host)',\n        roomCode\n      });\n    };\n    socketRef.current.onmessage = event => {\n      const data = JSON.parse(event.data);\n      handleWebSocketMessage(data);\n    };\n    socketRef.current.onclose = () => {\n      console.log('WebSocket connection closed');\n      setIsConnected(false);\n    };\n    socketRef.current.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n  };\n\n  // Handle incoming WebSocket messages\n  const handleWebSocketMessage = data => {\n    switch (data.type) {\n      case 'user_joined':\n        handleUserJoined(data);\n        break;\n      case 'user_left':\n        handleUserLeft(data);\n        break;\n      case 'playback_update':\n        handlePlaybackUpdate(data);\n        break;\n      case 'chat_message':\n        handleChatMessage(data);\n        break;\n      case 'reaction':\n        handleReaction(data);\n        break;\n      default:\n        console.log('Unknown message type:', data.type);\n    }\n  };\n\n  // Handle user joined event\n  const handleUserJoined = data => {\n    // Add user to participants list if they're not already in it\n    if (!participants.some(p => p.username === data.username)) {\n      setParticipants(prev => [...prev, {\n        id: data.userId,\n        username: data.username,\n        isHost: false,\n        isSelf: false\n      }]);\n\n      // Add system message to chat\n      setChatMessages(prev => [...prev, {\n        id: `system-${Date.now()}`,\n        type: 'system',\n        content: `${data.username} joined the watch party`,\n        timestamp: data.timestamp\n      }]);\n    }\n  };\n\n  // Handle user left event\n  const handleUserLeft = data => {\n    // Remove user from participants list\n    setParticipants(prev => prev.filter(p => p.id !== data.userId));\n\n    // Add system message to chat\n    setChatMessages(prev => [...prev, {\n      id: `system-${Date.now()}`,\n      type: 'system',\n      content: `${data.username} left the watch party`,\n      timestamp: data.timestamp\n    }]);\n  };\n\n  // Handle playback update event\n  const handlePlaybackUpdate = data => {\n    if (videoRef && videoRef.current) {\n      // Update video playback state\n      if (data.action === 'play') {\n        videoRef.current.play();\n      } else if (data.action === 'pause') {\n        videoRef.current.pause();\n      } else if (data.action === 'seek') {\n        videoRef.current.currentTime = data.currentTime;\n      }\n\n      // Add system message to chat\n      setChatMessages(prev => [...prev, {\n        id: `system-${Date.now()}`,\n        type: 'system',\n        content: `${data.username} ${data.action}ed the video`,\n        timestamp: data.timestamp\n      }]);\n    }\n  };\n\n  // Handle chat message event\n  const handleChatMessage = data => {\n    setChatMessages(prev => [...prev, {\n      id: data.messageId,\n      type: 'message',\n      sender: data.username,\n      content: data.message,\n      timestamp: data.timestamp\n    }]);\n  };\n\n  // Handle reaction event\n  const handleReaction = data => {\n    // Show reaction animation\n    setCurrentReaction({\n      emoji: data.emoji,\n      username: data.username,\n      timestamp: Date.now()\n    });\n\n    // Hide reaction after 2 seconds\n    setTimeout(() => {\n      setCurrentReaction(null);\n    }, 2000);\n  };\n\n  // Send WebSocket message\n  const sendWebSocketMessage = message => {\n    if (socketRef.current && isConnected) {\n      socketRef.current.send(JSON.stringify(message));\n    }\n  };\n\n  // Handle video playback events\n  const handlePlay = () => {\n    sendWebSocketMessage({\n      type: 'playback',\n      action: 'play',\n      username: 'You (Host)',\n      currentTime: videoRef.current ? videoRef.current.currentTime : 0\n    });\n  };\n  const handlePause = () => {\n    sendWebSocketMessage({\n      type: 'playback',\n      action: 'pause',\n      username: 'You (Host)',\n      currentTime: videoRef.current ? videoRef.current.currentTime : 0\n    });\n  };\n  const handleSeek = () => {\n    sendWebSocketMessage({\n      type: 'playback',\n      action: 'seek',\n      username: 'You (Host)',\n      currentTime: videoRef.current ? videoRef.current.currentTime : 0\n    });\n  };\n\n  // Handle chat input\n  const handleChatSubmit = e => {\n    e.preventDefault();\n    if (messageInput.trim()) {\n      sendWebSocketMessage({\n        type: 'chat',\n        message: messageInput,\n        username: 'You (Host)'\n      });\n      setMessageInput('');\n    }\n  };\n\n  // Handle reaction click\n  const handleReactionClick = emoji => {\n    sendWebSocketMessage({\n      type: 'reaction',\n      emoji,\n      username: 'You (Host)'\n    });\n    setShowEmojiPicker(false);\n  };\n\n  // Copy party code to clipboard\n  const copyPartyCode = () => {\n    navigator.clipboard.writeText(partyCode);\n    alert(`Party code ${partyCode} copied to clipboard!`);\n  };\n\n  // Format timestamp\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Toggle microphone\n  const toggleMicrophone = () => {\n    setMicEnabled(!micEnabled);\n    // In a real implementation, this would enable/disable the user's microphone\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watch-party-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"party-info-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"party-info\",\n        children: [/*#__PURE__*/_jsxDEV(FaUsers, {\n          className: \"party-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Watch Party\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"party-code\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: partyCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"copy-button\",\n            onClick: copyPartyCode,\n            children: /*#__PURE__*/_jsxDEV(FaCopy, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"party-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-button ${showChat ? 'active' : ''}`,\n          onClick: () => setShowChat(!showChat),\n          children: /*#__PURE__*/_jsxDEV(FaComments, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-button ${micEnabled ? 'active' : ''}`,\n          onClick: toggleMicrophone,\n          children: micEnabled ? /*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(FaMicrophoneSlash, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button invite-button\",\n          onClick: () => alert(`Invite your friends using code: ${partyCode}`),\n          children: [/*#__PURE__*/_jsxDEV(FaUserPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Invite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), showChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participants-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Participants (\", participants.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"participants-list\",\n          children: participants.map(participant => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"participant\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `participant-name ${participant.isHost ? 'host' : ''}`,\n              children: [participant.username, participant.isHost && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"host-badge\",\n                children: \"Host\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 19\n            }, this)\n          }, participant.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          ref: chatContainerRef,\n          children: chatMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message ${message.type === 'system' ? 'system-message' : ''}`,\n            children: [message.type === 'message' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-sender\",\n                children: message.sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: formatTimestamp(message.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 19\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chat-input-form\",\n          onSubmit: handleChatSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: messageInput,\n              onChange: e => setMessageInput(e.target.value),\n              placeholder: \"Type a message...\",\n              className: \"chat-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"emoji-button\",\n              onClick: () => setShowEmojiPicker(!showEmojiPicker),\n              children: /*#__PURE__*/_jsxDEV(FaSmile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"emoji-picker\",\n              children: commonEmojis.map(emoji => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"emoji\",\n                onClick: () => handleReactionClick(emoji),\n                children: emoji\n              }, emoji, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }, this), currentReaction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reaction-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reaction-emoji\",\n        children: currentReaction.emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reaction-username\",\n        children: currentReaction.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 5\n  }, this);\n};\n_s(WatchParty, \"jMuU/D6yKhEVFuWtqV4vwQVof9o=\", false, function () {\n  return [useNavigate];\n});\n_c = WatchParty;\nexport default WatchParty;\nvar _c;\n$RefreshReg$(_c, \"WatchParty\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","FaUsers","FaCopy","FaUserPlus","FaComments","FaMicrophone","FaMicrophoneSlash","FaSmile","jsxDEV","_jsxDEV","MockWebSocket","constructor","url","onmessage","onopen","onclose","onerror","setTimeout","type","send","data","console","log","parsedData","JSON","parse","simulateUserJoined","username","simulatePlaybackSync","simulateChatMessage","simulateReaction","close","response","timestamp","Date","toISOString","userId","Math","floor","random","stringify","action","currentTime","message","messageId","emoji","WatchParty","movieId","videoRef","isHost","_s","partyCode","setPartyCode","isConnected","setIsConnected","participants","setParticipants","id","isSelf","chatMessages","setChatMessages","messageInput","setMessageInput","showChat","setShowChat","micEnabled","setMicEnabled","showEmojiPicker","setShowEmojiPicker","currentReaction","setCurrentReaction","socketRef","chatContainerRef","navigate","commonEmojis","randomCode","toString","substring","toUpperCase","initializeWebSocket","current","scrollTop","scrollHeight","roomCode","sendWebSocketMessage","event","handleWebSocketMessage","error","handleUserJoined","handleUserLeft","handlePlaybackUpdate","handleChatMessage","handleReaction","some","p","prev","now","content","filter","play","pause","sender","handlePlay","handlePause","handleSeek","handleChatSubmit","e","preventDefault","trim","handleReactionClick","copyPartyCode","navigator","clipboard","writeText","alert","formatTimestamp","date","toLocaleTimeString","hour","minute","toggleMicrophone","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","participant","ref","onSubmit","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/hp/.cursor-tutor/netflix-clone/src/components/WatchParty.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FaUsers, FaCopy, FaUserPlus, FaComments, FaMicrophone, FaMicrophoneSlash, FaSmile } from 'react-icons/fa';\r\nimport './WatchParty.css';\r\n\r\n// Mock WebSocket for demo purposes\r\nclass MockWebSocket {\r\n  constructor(url) {\r\n    this.url = url;\r\n    this.onmessage = null;\r\n    this.onopen = null;\r\n    this.onclose = null;\r\n    this.onerror = null;\r\n    \r\n    // Simulate connection opening\r\n    setTimeout(() => {\r\n      if (this.onopen) this.onopen({ type: 'open' });\r\n    }, 500);\r\n  }\r\n  \r\n  send(data) {\r\n    console.log('WebSocket message sent:', data);\r\n    \r\n    // Simulate receiving a response\r\n    setTimeout(() => {\r\n      if (this.onmessage) {\r\n        const parsedData = JSON.parse(data);\r\n        \r\n        // Simulate different types of responses\r\n        if (parsedData.type === 'join') {\r\n          this.simulateUserJoined(parsedData.username);\r\n        } else if (parsedData.type === 'playback') {\r\n          this.simulatePlaybackSync(parsedData);\r\n        } else if (parsedData.type === 'chat') {\r\n          this.simulateChatMessage(parsedData);\r\n        } else if (parsedData.type === 'reaction') {\r\n          this.simulateReaction(parsedData);\r\n        }\r\n      }\r\n    }, 300);\r\n  }\r\n  \r\n  close() {\r\n    if (this.onclose) this.onclose({ type: 'close' });\r\n  }\r\n  \r\n  // Simulation helpers\r\n  simulateUserJoined(username) {\r\n    const response = {\r\n      type: 'user_joined',\r\n      username,\r\n      timestamp: new Date().toISOString(),\r\n      userId: Math.floor(Math.random() * 1000)\r\n    };\r\n    \r\n    if (this.onmessage) {\r\n      this.onmessage({ data: JSON.stringify(response) });\r\n    }\r\n  }\r\n  \r\n  simulatePlaybackSync(data) {\r\n    const response = {\r\n      type: 'playback_update',\r\n      action: data.action,\r\n      currentTime: data.currentTime,\r\n      username: data.username,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    if (this.onmessage) {\r\n      this.onmessage({ data: JSON.stringify(response) });\r\n    }\r\n  }\r\n  \r\n  simulateChatMessage(data) {\r\n    const response = {\r\n      type: 'chat_message',\r\n      message: data.message,\r\n      username: data.username,\r\n      timestamp: new Date().toISOString(),\r\n      messageId: Math.floor(Math.random() * 10000)\r\n    };\r\n    \r\n    if (this.onmessage) {\r\n      this.onmessage({ data: JSON.stringify(response) });\r\n    }\r\n  }\r\n  \r\n  simulateReaction(data) {\r\n    const response = {\r\n      type: 'reaction',\r\n      emoji: data.emoji,\r\n      username: data.username,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    if (this.onmessage) {\r\n      this.onmessage({ data: JSON.stringify(response) });\r\n    }\r\n  }\r\n}\r\n\r\n// Main component\r\nconst WatchParty = ({ movieId, videoRef, isHost = true }) => {\r\n  const [partyCode, setPartyCode] = useState('');\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [participants, setParticipants] = useState([\r\n    { id: 1, username: 'You (Host)', isHost: true, isSelf: true }\r\n  ]);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [messageInput, setMessageInput] = useState('');\r\n  const [showChat, setShowChat] = useState(true);\r\n  const [micEnabled, setMicEnabled] = useState(false);\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [currentReaction, setCurrentReaction] = useState(null);\r\n  \r\n  const socketRef = useRef(null);\r\n  const chatContainerRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  \r\n  // Common emojis for reactions\r\n  const commonEmojis = ['👍', '❤️', '😂', '😮', '😢', '👏', '🔥', '🤔'];\r\n  \r\n  // Generate a random party code on mount\r\n  useEffect(() => {\r\n    const randomCode = Math.random().toString(36).substring(2, 8).toUpperCase();\r\n    setPartyCode(randomCode);\r\n    \r\n    // Initialize WebSocket connection\r\n    initializeWebSocket(randomCode);\r\n    \r\n    return () => {\r\n      // Clean up WebSocket on unmount\r\n      if (socketRef.current) {\r\n        socketRef.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n  // Auto-scroll chat to bottom when new messages arrive\r\n  useEffect(() => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }\r\n  }, [chatMessages]);\r\n  \r\n  // Initialize WebSocket connection\r\n  const initializeWebSocket = (roomCode) => {\r\n    // In a real implementation, this would connect to your WebSocket server\r\n    // For demo purposes, we're using a mock WebSocket\r\n    socketRef.current = new MockWebSocket(`wss://api.example.com/watchparty/${roomCode}`);\r\n    \r\n    socketRef.current.onopen = () => {\r\n      console.log('WebSocket connection established');\r\n      setIsConnected(true);\r\n      \r\n      // Join the room\r\n      sendWebSocketMessage({\r\n        type: 'join',\r\n        username: 'You (Host)',\r\n        roomCode\r\n      });\r\n    };\r\n    \r\n    socketRef.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      handleWebSocketMessage(data);\r\n    };\r\n    \r\n    socketRef.current.onclose = () => {\r\n      console.log('WebSocket connection closed');\r\n      setIsConnected(false);\r\n    };\r\n    \r\n    socketRef.current.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n    };\r\n  };\r\n  \r\n  // Handle incoming WebSocket messages\r\n  const handleWebSocketMessage = (data) => {\r\n    switch (data.type) {\r\n      case 'user_joined':\r\n        handleUserJoined(data);\r\n        break;\r\n      case 'user_left':\r\n        handleUserLeft(data);\r\n        break;\r\n      case 'playback_update':\r\n        handlePlaybackUpdate(data);\r\n        break;\r\n      case 'chat_message':\r\n        handleChatMessage(data);\r\n        break;\r\n      case 'reaction':\r\n        handleReaction(data);\r\n        break;\r\n      default:\r\n        console.log('Unknown message type:', data.type);\r\n    }\r\n  };\r\n  \r\n  // Handle user joined event\r\n  const handleUserJoined = (data) => {\r\n    // Add user to participants list if they're not already in it\r\n    if (!participants.some(p => p.username === data.username)) {\r\n      setParticipants(prev => [\r\n        ...prev,\r\n        { id: data.userId, username: data.username, isHost: false, isSelf: false }\r\n      ]);\r\n      \r\n      // Add system message to chat\r\n      setChatMessages(prev => [\r\n        ...prev,\r\n        {\r\n          id: `system-${Date.now()}`,\r\n          type: 'system',\r\n          content: `${data.username} joined the watch party`,\r\n          timestamp: data.timestamp\r\n        }\r\n      ]);\r\n    }\r\n  };\r\n  \r\n  // Handle user left event\r\n  const handleUserLeft = (data) => {\r\n    // Remove user from participants list\r\n    setParticipants(prev => prev.filter(p => p.id !== data.userId));\r\n    \r\n    // Add system message to chat\r\n    setChatMessages(prev => [\r\n      ...prev,\r\n      {\r\n        id: `system-${Date.now()}`,\r\n        type: 'system',\r\n        content: `${data.username} left the watch party`,\r\n        timestamp: data.timestamp\r\n      }\r\n    ]);\r\n  };\r\n  \r\n  // Handle playback update event\r\n  const handlePlaybackUpdate = (data) => {\r\n    if (videoRef && videoRef.current) {\r\n      // Update video playback state\r\n      if (data.action === 'play') {\r\n        videoRef.current.play();\r\n      } else if (data.action === 'pause') {\r\n        videoRef.current.pause();\r\n      } else if (data.action === 'seek') {\r\n        videoRef.current.currentTime = data.currentTime;\r\n      }\r\n      \r\n      // Add system message to chat\r\n      setChatMessages(prev => [\r\n        ...prev,\r\n        {\r\n          id: `system-${Date.now()}`,\r\n          type: 'system',\r\n          content: `${data.username} ${data.action}ed the video`,\r\n          timestamp: data.timestamp\r\n        }\r\n      ]);\r\n    }\r\n  };\r\n  \r\n  // Handle chat message event\r\n  const handleChatMessage = (data) => {\r\n    setChatMessages(prev => [\r\n      ...prev,\r\n      {\r\n        id: data.messageId,\r\n        type: 'message',\r\n        sender: data.username,\r\n        content: data.message,\r\n        timestamp: data.timestamp\r\n      }\r\n    ]);\r\n  };\r\n  \r\n  // Handle reaction event\r\n  const handleReaction = (data) => {\r\n    // Show reaction animation\r\n    setCurrentReaction({\r\n      emoji: data.emoji,\r\n      username: data.username,\r\n      timestamp: Date.now()\r\n    });\r\n    \r\n    // Hide reaction after 2 seconds\r\n    setTimeout(() => {\r\n      setCurrentReaction(null);\r\n    }, 2000);\r\n  };\r\n  \r\n  // Send WebSocket message\r\n  const sendWebSocketMessage = (message) => {\r\n    if (socketRef.current && isConnected) {\r\n      socketRef.current.send(JSON.stringify(message));\r\n    }\r\n  };\r\n  \r\n  // Handle video playback events\r\n  const handlePlay = () => {\r\n    sendWebSocketMessage({\r\n      type: 'playback',\r\n      action: 'play',\r\n      username: 'You (Host)',\r\n      currentTime: videoRef.current ? videoRef.current.currentTime : 0\r\n    });\r\n  };\r\n  \r\n  const handlePause = () => {\r\n    sendWebSocketMessage({\r\n      type: 'playback',\r\n      action: 'pause',\r\n      username: 'You (Host)',\r\n      currentTime: videoRef.current ? videoRef.current.currentTime : 0\r\n    });\r\n  };\r\n  \r\n  const handleSeek = () => {\r\n    sendWebSocketMessage({\r\n      type: 'playback',\r\n      action: 'seek',\r\n      username: 'You (Host)',\r\n      currentTime: videoRef.current ? videoRef.current.currentTime : 0\r\n    });\r\n  };\r\n  \r\n  // Handle chat input\r\n  const handleChatSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (messageInput.trim()) {\r\n      sendWebSocketMessage({\r\n        type: 'chat',\r\n        message: messageInput,\r\n        username: 'You (Host)'\r\n      });\r\n      \r\n      setMessageInput('');\r\n    }\r\n  };\r\n  \r\n  // Handle reaction click\r\n  const handleReactionClick = (emoji) => {\r\n    sendWebSocketMessage({\r\n      type: 'reaction',\r\n      emoji,\r\n      username: 'You (Host)'\r\n    });\r\n    \r\n    setShowEmojiPicker(false);\r\n  };\r\n  \r\n  // Copy party code to clipboard\r\n  const copyPartyCode = () => {\r\n    navigator.clipboard.writeText(partyCode);\r\n    alert(`Party code ${partyCode} copied to clipboard!`);\r\n  };\r\n  \r\n  // Format timestamp\r\n  const formatTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n  \r\n  // Toggle microphone\r\n  const toggleMicrophone = () => {\r\n    setMicEnabled(!micEnabled);\r\n    // In a real implementation, this would enable/disable the user's microphone\r\n  };\r\n  \r\n  return (\r\n    <div className=\"watch-party-container\">\r\n      {/* Party info bar */}\r\n      <div className=\"party-info-bar\">\r\n        <div className=\"party-info\">\r\n          <FaUsers className=\"party-icon\" />\r\n          <span>Watch Party</span>\r\n          <div className=\"party-code\">\r\n            <span>{partyCode}</span>\r\n            <button className=\"copy-button\" onClick={copyPartyCode}>\r\n              <FaCopy />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"party-controls\">\r\n          <button \r\n            className={`control-button ${showChat ? 'active' : ''}`}\r\n            onClick={() => setShowChat(!showChat)}\r\n          >\r\n            <FaComments />\r\n          </button>\r\n          <button \r\n            className={`control-button ${micEnabled ? 'active' : ''}`}\r\n            onClick={toggleMicrophone}\r\n          >\r\n            {micEnabled ? <FaMicrophone /> : <FaMicrophoneSlash />}\r\n          </button>\r\n          <button \r\n            className=\"control-button invite-button\"\r\n            onClick={() => alert(`Invite your friends using code: ${partyCode}`)}\r\n          >\r\n            <FaUserPlus />\r\n            <span>Invite</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Chat sidebar */}\r\n      {showChat && (\r\n        <div className=\"chat-sidebar\">\r\n          <div className=\"participants-section\">\r\n            <h3>Participants ({participants.length})</h3>\r\n            <ul className=\"participants-list\">\r\n              {participants.map(participant => (\r\n                <li key={participant.id} className=\"participant\">\r\n                  <span className={`participant-name ${participant.isHost ? 'host' : ''}`}>\r\n                    {participant.username}\r\n                    {participant.isHost && <span className=\"host-badge\">Host</span>}\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          \r\n          <div className=\"chat-section\">\r\n            <h3>Chat</h3>\r\n            <div className=\"chat-messages\" ref={chatContainerRef}>\r\n              {chatMessages.map(message => (\r\n                <div \r\n                  key={message.id} \r\n                  className={`chat-message ${message.type === 'system' ? 'system-message' : ''}`}\r\n                >\r\n                  {message.type === 'message' && (\r\n                    <div className=\"message-header\">\r\n                      <span className=\"message-sender\">{message.sender}</span>\r\n                      <span className=\"message-time\">{formatTimestamp(message.timestamp)}</span>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"message-content\">{message.content}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            <form className=\"chat-input-form\" onSubmit={handleChatSubmit}>\r\n              <div className=\"chat-input-container\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={messageInput}\r\n                  onChange={(e) => setMessageInput(e.target.value)}\r\n                  placeholder=\"Type a message...\"\r\n                  className=\"chat-input\"\r\n                />\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"emoji-button\"\r\n                  onClick={() => setShowEmojiPicker(!showEmojiPicker)}\r\n                >\r\n                  <FaSmile />\r\n                </button>\r\n                {showEmojiPicker && (\r\n                  <div className=\"emoji-picker\">\r\n                    {commonEmojis.map(emoji => (\r\n                      <button\r\n                        key={emoji}\r\n                        type=\"button\"\r\n                        className=\"emoji\"\r\n                        onClick={() => handleReactionClick(emoji)}\r\n                      >\r\n                        {emoji}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <button type=\"submit\" className=\"send-button\">Send</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Reaction display */}\r\n      {currentReaction && (\r\n        <div className=\"reaction-display\">\r\n          <div className=\"reaction-emoji\">{currentReaction.emoji}</div>\r\n          <div className=\"reaction-username\">{currentReaction.username}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WatchParty; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}