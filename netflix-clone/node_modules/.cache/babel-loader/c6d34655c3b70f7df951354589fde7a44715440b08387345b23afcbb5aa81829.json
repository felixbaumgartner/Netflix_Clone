{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useNavigate}from'react-router-dom';import{FaUsers,FaCopy,FaUserPlus,FaComments,FaMicrophone,FaMicrophoneSlash,FaSmile}from'react-icons/fa';import watchPartyService from'../services/watchPartyService';import'./WatchParty.css';// Main component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WatchParty=_ref=>{let{movieId,videoRef,isHost=true}=_ref;const[partyCode,setPartyCode]=useState('');const[isConnected,setIsConnected]=useState(false);const[participants,setParticipants]=useState([{id:1,username:'You (Host)',isHost:true,isSelf:true}]);const[chatMessages,setChatMessages]=useState([]);const[messageInput,setMessageInput]=useState('');const[showChat,setShowChat]=useState(true);const[micEnabled,setMicEnabled]=useState(false);const[showEmojiPicker,setShowEmojiPicker]=useState(false);const[currentReaction,setCurrentReaction]=useState(null);const chatContainerRef=useRef(null);const navigate=useNavigate();// Common emojis for reactions\nconst commonEmojis=['👍','❤️','😂','😮','😢','👏','🔥','🤔'];// Generate a random party code on mount and initialize watch party\nuseEffect(()=>{const randomCode=Math.random().toString(36).substring(2,8).toUpperCase();setPartyCode(randomCode);// Initialize watch party connection\ninitializeWatchParty(randomCode);return()=>{// Clean up watch party connection on unmount\nwatchPartyService.disconnect();};},[]);// Auto-scroll chat to bottom when new messages arrive\nuseEffect(()=>{if(chatContainerRef.current){chatContainerRef.current.scrollTop=chatContainerRef.current.scrollHeight;}},[chatMessages]);// Set up video event listeners\nuseEffect(()=>{if(videoRef&&videoRef.current){const player=videoRef.current.getInternalPlayer();if(player){// Add event listeners to the video player\nplayer.addEventListener('play',handlePlay);player.addEventListener('pause',handlePause);player.addEventListener('seeked',handleSeek);return()=>{// Remove event listeners when component unmounts\nplayer.removeEventListener('play',handlePlay);player.removeEventListener('pause',handlePause);player.removeEventListener('seeked',handleSeek);};}}},[videoRef,isConnected]);// Initialize watch party\nconst initializeWatchParty=roomCode=>{// Set up event handlers\nwatchPartyService.on('onUserJoined',handleUserJoined);watchPartyService.on('onUserLeft',handleUserLeft);watchPartyService.on('onPlaybackUpdate',handlePlaybackUpdate);watchPartyService.on('onChatMessage',handleChatMessage);watchPartyService.on('onReaction',handleReaction);watchPartyService.on('onConnectionChange',connected=>setIsConnected(connected));watchPartyService.on('onError',error=>console.error('Watch party error:',error));// Connect to watch party\nwatchPartyService.connect(roomCode,'You (Host)',isHost);// Add welcome message\nsetChatMessages([{id:`system-welcome`,type:'system',content:`Welcome to the watch party! Share code ${roomCode} with friends to invite them.`,timestamp:new Date().toISOString()}]);};// Handle user joined event\nconst handleUserJoined=data=>{// Add user to participants list if they're not already in it\nif(!participants.some(p=>p.username===data.username)){setParticipants(prev=>[...prev,{id:data.userId,username:data.username,isHost:data.isHost,isSelf:false}]);// Add system message to chat\nsetChatMessages(prev=>[...prev,{id:`system-${Date.now()}`,type:'system',content:`${data.username} joined the watch party`,timestamp:data.timestamp}]);}};// Handle user left event\nconst handleUserLeft=data=>{// Remove user from participants list\nsetParticipants(prev=>prev.filter(p=>p.id!==data.userId));// Add system message to chat\nsetChatMessages(prev=>[...prev,{id:`system-${Date.now()}`,type:'system',content:`${data.username} left the watch party`,timestamp:data.timestamp}]);};// Handle playback update event\nconst handlePlaybackUpdate=data=>{if(videoRef&&videoRef.current){const player=videoRef.current.getInternalPlayer();if(player){// Update video playback state\nif(data.action==='play'){player.play();}else if(data.action==='pause'){player.pause();}else if(data.action==='seek'){player.currentTime=data.currentTime;}// Add system message to chat\nsetChatMessages(prev=>[...prev,{id:`system-${Date.now()}`,type:'system',content:`${data.username} ${data.action}ed the video`,timestamp:data.timestamp}]);}}};// Handle chat message event\nconst handleChatMessage=data=>{setChatMessages(prev=>[...prev,{id:data.messageId,type:'message',sender:data.username,content:data.message,timestamp:data.timestamp}]);};// Handle reaction event\nconst handleReaction=data=>{// Show reaction animation\nsetCurrentReaction({emoji:data.emoji,username:data.username,timestamp:Date.now()});// Hide reaction after 2 seconds\nsetTimeout(()=>{setCurrentReaction(null);},2000);};// Handle video playback events\nconst handlePlay=()=>{if(isConnected){watchPartyService.sendPlaybackUpdate('play',videoRef.current.getCurrentTime());}};const handlePause=()=>{if(isConnected){watchPartyService.sendPlaybackUpdate('pause',videoRef.current.getCurrentTime());}};const handleSeek=()=>{if(isConnected){watchPartyService.sendPlaybackUpdate('seek',videoRef.current.getCurrentTime());}};// Handle chat input\nconst handleChatSubmit=e=>{e.preventDefault();if(messageInput.trim()&&isConnected){watchPartyService.sendChatMessage(messageInput);setMessageInput('');}};// Handle reaction click\nconst handleReactionClick=emoji=>{if(isConnected){watchPartyService.sendReaction(emoji);}setShowEmojiPicker(false);};// Copy party code to clipboard\nconst copyPartyCode=()=>{navigator.clipboard.writeText(partyCode);alert(`Party code ${partyCode} copied to clipboard!`);};// Format timestamp\nconst formatTimestamp=timestamp=>{const date=new Date(timestamp);return date.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'});};// Toggle microphone\nconst toggleMicrophone=()=>{setMicEnabled(!micEnabled);// In a real implementation, this would enable/disable the user's microphone\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"watch-party-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"party-info-bar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"party-info\",children:[/*#__PURE__*/_jsx(FaUsers,{className:\"party-icon\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Watch Party\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"party-code\",children:[/*#__PURE__*/_jsx(\"span\",{children:partyCode}),/*#__PURE__*/_jsx(\"button\",{className:\"copy-button\",onClick:copyPartyCode,children:/*#__PURE__*/_jsx(FaCopy,{})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"party-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:`control-button ${showChat?'active':''}`,onClick:()=>setShowChat(!showChat),children:/*#__PURE__*/_jsx(FaComments,{})}),/*#__PURE__*/_jsx(\"button\",{className:`control-button ${micEnabled?'active':''}`,onClick:toggleMicrophone,children:micEnabled?/*#__PURE__*/_jsx(FaMicrophone,{}):/*#__PURE__*/_jsx(FaMicrophoneSlash,{})}),/*#__PURE__*/_jsxs(\"button\",{className:\"control-button invite-button\",onClick:()=>alert(`Invite your friends using code: ${partyCode}`),children:[/*#__PURE__*/_jsx(FaUserPlus,{}),/*#__PURE__*/_jsx(\"span\",{children:\"Invite\"})]})]})]}),showChat&&/*#__PURE__*/_jsxs(\"div\",{className:\"chat-sidebar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"participants-section\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Participants (\",participants.length,\")\"]}),/*#__PURE__*/_jsx(\"ul\",{className:\"participants-list\",children:participants.map(participant=>/*#__PURE__*/_jsx(\"li\",{className:\"participant\",children:/*#__PURE__*/_jsxs(\"span\",{className:`participant-name ${participant.isHost?'host':''}`,children:[participant.username,participant.isHost&&/*#__PURE__*/_jsx(\"span\",{className:\"host-badge\",children:\"Host\"})]})},participant.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Chat\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages\",ref:chatContainerRef,children:chatMessages.map(message=>/*#__PURE__*/_jsxs(\"div\",{className:`chat-message ${message.type==='system'?'system-message':''}`,children:[message.type==='message'&&/*#__PURE__*/_jsxs(\"div\",{className:\"message-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"message-sender\",children:message.sender}),/*#__PURE__*/_jsx(\"span\",{className:\"message-time\",children:formatTimestamp(message.timestamp)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:message.content})]},message.id))}),/*#__PURE__*/_jsxs(\"form\",{className:\"chat-input-form\",onSubmit:handleChatSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:messageInput,onChange:e=>setMessageInput(e.target.value),placeholder:\"Type a message...\",className:\"chat-input\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"emoji-button\",onClick:()=>setShowEmojiPicker(!showEmojiPicker),children:/*#__PURE__*/_jsx(FaSmile,{})}),showEmojiPicker&&/*#__PURE__*/_jsx(\"div\",{className:\"emoji-picker\",children:commonEmojis.map(emoji=>/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"emoji\",onClick:()=>handleReactionClick(emoji),children:emoji},emoji))})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-button\",children:\"Send\"})]})]})]}),currentReaction&&/*#__PURE__*/_jsxs(\"div\",{className:\"reaction-display\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"reaction-emoji\",children:currentReaction.emoji}),/*#__PURE__*/_jsx(\"div\",{className:\"reaction-username\",children:currentReaction.username})]})]});};export default WatchParty;","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","FaUsers","FaCopy","FaUserPlus","FaComments","FaMicrophone","FaMicrophoneSlash","FaSmile","watchPartyService","jsx","_jsx","jsxs","_jsxs","WatchParty","_ref","movieId","videoRef","isHost","partyCode","setPartyCode","isConnected","setIsConnected","participants","setParticipants","id","username","isSelf","chatMessages","setChatMessages","messageInput","setMessageInput","showChat","setShowChat","micEnabled","setMicEnabled","showEmojiPicker","setShowEmojiPicker","currentReaction","setCurrentReaction","chatContainerRef","navigate","commonEmojis","randomCode","Math","random","toString","substring","toUpperCase","initializeWatchParty","disconnect","current","scrollTop","scrollHeight","player","getInternalPlayer","addEventListener","handlePlay","handlePause","handleSeek","removeEventListener","roomCode","on","handleUserJoined","handleUserLeft","handlePlaybackUpdate","handleChatMessage","handleReaction","connected","error","console","connect","type","content","timestamp","Date","toISOString","data","some","p","prev","userId","now","filter","action","play","pause","currentTime","messageId","sender","message","emoji","setTimeout","sendPlaybackUpdate","getCurrentTime","handleChatSubmit","e","preventDefault","trim","sendChatMessage","handleReactionClick","sendReaction","copyPartyCode","navigator","clipboard","writeText","alert","formatTimestamp","date","toLocaleTimeString","hour","minute","toggleMicrophone","className","children","onClick","length","map","participant","ref","onSubmit","value","onChange","target","placeholder"],"sources":["C:/Users/hp/.cursor-tutor/netflix-clone/src/components/WatchParty.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FaUsers, FaCopy, FaUserPlus, FaComments, FaMicrophone, FaMicrophoneSlash, FaSmile } from 'react-icons/fa';\r\nimport watchPartyService from '../services/watchPartyService';\r\nimport './WatchParty.css';\r\n\r\n// Main component\r\nconst WatchParty = ({ movieId, videoRef, isHost = true }) => {\r\n  const [partyCode, setPartyCode] = useState('');\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [participants, setParticipants] = useState([\r\n    { id: 1, username: 'You (Host)', isHost: true, isSelf: true }\r\n  ]);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [messageInput, setMessageInput] = useState('');\r\n  const [showChat, setShowChat] = useState(true);\r\n  const [micEnabled, setMicEnabled] = useState(false);\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [currentReaction, setCurrentReaction] = useState(null);\r\n  \r\n  const chatContainerRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  \r\n  // Common emojis for reactions\r\n  const commonEmojis = ['👍', '❤️', '😂', '😮', '😢', '👏', '🔥', '🤔'];\r\n  \r\n  // Generate a random party code on mount and initialize watch party\r\n  useEffect(() => {\r\n    const randomCode = Math.random().toString(36).substring(2, 8).toUpperCase();\r\n    setPartyCode(randomCode);\r\n    \r\n    // Initialize watch party connection\r\n    initializeWatchParty(randomCode);\r\n    \r\n    return () => {\r\n      // Clean up watch party connection on unmount\r\n      watchPartyService.disconnect();\r\n    };\r\n  }, []);\r\n  \r\n  // Auto-scroll chat to bottom when new messages arrive\r\n  useEffect(() => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }\r\n  }, [chatMessages]);\r\n  \r\n  // Set up video event listeners\r\n  useEffect(() => {\r\n    if (videoRef && videoRef.current) {\r\n      const player = videoRef.current.getInternalPlayer();\r\n      \r\n      if (player) {\r\n        // Add event listeners to the video player\r\n        player.addEventListener('play', handlePlay);\r\n        player.addEventListener('pause', handlePause);\r\n        player.addEventListener('seeked', handleSeek);\r\n        \r\n        return () => {\r\n          // Remove event listeners when component unmounts\r\n          player.removeEventListener('play', handlePlay);\r\n          player.removeEventListener('pause', handlePause);\r\n          player.removeEventListener('seeked', handleSeek);\r\n        };\r\n      }\r\n    }\r\n  }, [videoRef, isConnected]);\r\n  \r\n  // Initialize watch party\r\n  const initializeWatchParty = (roomCode) => {\r\n    // Set up event handlers\r\n    watchPartyService.on('onUserJoined', handleUserJoined);\r\n    watchPartyService.on('onUserLeft', handleUserLeft);\r\n    watchPartyService.on('onPlaybackUpdate', handlePlaybackUpdate);\r\n    watchPartyService.on('onChatMessage', handleChatMessage);\r\n    watchPartyService.on('onReaction', handleReaction);\r\n    watchPartyService.on('onConnectionChange', (connected) => setIsConnected(connected));\r\n    watchPartyService.on('onError', (error) => console.error('Watch party error:', error));\r\n    \r\n    // Connect to watch party\r\n    watchPartyService.connect(roomCode, 'You (Host)', isHost);\r\n    \r\n    // Add welcome message\r\n    setChatMessages([\r\n      {\r\n        id: `system-welcome`,\r\n        type: 'system',\r\n        content: `Welcome to the watch party! Share code ${roomCode} with friends to invite them.`,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    ]);\r\n  };\r\n  \r\n  // Handle user joined event\r\n  const handleUserJoined = (data) => {\r\n    // Add user to participants list if they're not already in it\r\n    if (!participants.some(p => p.username === data.username)) {\r\n      setParticipants(prev => [\r\n        ...prev,\r\n        { id: data.userId, username: data.username, isHost: data.isHost, isSelf: false }\r\n      ]);\r\n      \r\n      // Add system message to chat\r\n      setChatMessages(prev => [\r\n        ...prev,\r\n        {\r\n          id: `system-${Date.now()}`,\r\n          type: 'system',\r\n          content: `${data.username} joined the watch party`,\r\n          timestamp: data.timestamp\r\n        }\r\n      ]);\r\n    }\r\n  };\r\n  \r\n  // Handle user left event\r\n  const handleUserLeft = (data) => {\r\n    // Remove user from participants list\r\n    setParticipants(prev => prev.filter(p => p.id !== data.userId));\r\n    \r\n    // Add system message to chat\r\n    setChatMessages(prev => [\r\n      ...prev,\r\n      {\r\n        id: `system-${Date.now()}`,\r\n        type: 'system',\r\n        content: `${data.username} left the watch party`,\r\n        timestamp: data.timestamp\r\n      }\r\n    ]);\r\n  };\r\n  \r\n  // Handle playback update event\r\n  const handlePlaybackUpdate = (data) => {\r\n    if (videoRef && videoRef.current) {\r\n      const player = videoRef.current.getInternalPlayer();\r\n      \r\n      if (player) {\r\n        // Update video playback state\r\n        if (data.action === 'play') {\r\n          player.play();\r\n        } else if (data.action === 'pause') {\r\n          player.pause();\r\n        } else if (data.action === 'seek') {\r\n          player.currentTime = data.currentTime;\r\n        }\r\n        \r\n        // Add system message to chat\r\n        setChatMessages(prev => [\r\n          ...prev,\r\n          {\r\n            id: `system-${Date.now()}`,\r\n            type: 'system',\r\n            content: `${data.username} ${data.action}ed the video`,\r\n            timestamp: data.timestamp\r\n          }\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Handle chat message event\r\n  const handleChatMessage = (data) => {\r\n    setChatMessages(prev => [\r\n      ...prev,\r\n      {\r\n        id: data.messageId,\r\n        type: 'message',\r\n        sender: data.username,\r\n        content: data.message,\r\n        timestamp: data.timestamp\r\n      }\r\n    ]);\r\n  };\r\n  \r\n  // Handle reaction event\r\n  const handleReaction = (data) => {\r\n    // Show reaction animation\r\n    setCurrentReaction({\r\n      emoji: data.emoji,\r\n      username: data.username,\r\n      timestamp: Date.now()\r\n    });\r\n    \r\n    // Hide reaction after 2 seconds\r\n    setTimeout(() => {\r\n      setCurrentReaction(null);\r\n    }, 2000);\r\n  };\r\n  \r\n  // Handle video playback events\r\n  const handlePlay = () => {\r\n    if (isConnected) {\r\n      watchPartyService.sendPlaybackUpdate('play', videoRef.current.getCurrentTime());\r\n    }\r\n  };\r\n  \r\n  const handlePause = () => {\r\n    if (isConnected) {\r\n      watchPartyService.sendPlaybackUpdate('pause', videoRef.current.getCurrentTime());\r\n    }\r\n  };\r\n  \r\n  const handleSeek = () => {\r\n    if (isConnected) {\r\n      watchPartyService.sendPlaybackUpdate('seek', videoRef.current.getCurrentTime());\r\n    }\r\n  };\r\n  \r\n  // Handle chat input\r\n  const handleChatSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (messageInput.trim() && isConnected) {\r\n      watchPartyService.sendChatMessage(messageInput);\r\n      setMessageInput('');\r\n    }\r\n  };\r\n  \r\n  // Handle reaction click\r\n  const handleReactionClick = (emoji) => {\r\n    if (isConnected) {\r\n      watchPartyService.sendReaction(emoji);\r\n    }\r\n    \r\n    setShowEmojiPicker(false);\r\n  };\r\n  \r\n  // Copy party code to clipboard\r\n  const copyPartyCode = () => {\r\n    navigator.clipboard.writeText(partyCode);\r\n    alert(`Party code ${partyCode} copied to clipboard!`);\r\n  };\r\n  \r\n  // Format timestamp\r\n  const formatTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n  \r\n  // Toggle microphone\r\n  const toggleMicrophone = () => {\r\n    setMicEnabled(!micEnabled);\r\n    // In a real implementation, this would enable/disable the user's microphone\r\n  };\r\n  \r\n  return (\r\n    <div className=\"watch-party-container\">\r\n      {/* Party info bar */}\r\n      <div className=\"party-info-bar\">\r\n        <div className=\"party-info\">\r\n          <FaUsers className=\"party-icon\" />\r\n          <span>Watch Party</span>\r\n          <div className=\"party-code\">\r\n            <span>{partyCode}</span>\r\n            <button className=\"copy-button\" onClick={copyPartyCode}>\r\n              <FaCopy />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"party-controls\">\r\n          <button \r\n            className={`control-button ${showChat ? 'active' : ''}`}\r\n            onClick={() => setShowChat(!showChat)}\r\n          >\r\n            <FaComments />\r\n          </button>\r\n          <button \r\n            className={`control-button ${micEnabled ? 'active' : ''}`}\r\n            onClick={toggleMicrophone}\r\n          >\r\n            {micEnabled ? <FaMicrophone /> : <FaMicrophoneSlash />}\r\n          </button>\r\n          <button \r\n            className=\"control-button invite-button\"\r\n            onClick={() => alert(`Invite your friends using code: ${partyCode}`)}\r\n          >\r\n            <FaUserPlus />\r\n            <span>Invite</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Chat sidebar */}\r\n      {showChat && (\r\n        <div className=\"chat-sidebar\">\r\n          <div className=\"participants-section\">\r\n            <h3>Participants ({participants.length})</h3>\r\n            <ul className=\"participants-list\">\r\n              {participants.map(participant => (\r\n                <li key={participant.id} className=\"participant\">\r\n                  <span className={`participant-name ${participant.isHost ? 'host' : ''}`}>\r\n                    {participant.username}\r\n                    {participant.isHost && <span className=\"host-badge\">Host</span>}\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          \r\n          <div className=\"chat-section\">\r\n            <h3>Chat</h3>\r\n            <div className=\"chat-messages\" ref={chatContainerRef}>\r\n              {chatMessages.map(message => (\r\n                <div \r\n                  key={message.id} \r\n                  className={`chat-message ${message.type === 'system' ? 'system-message' : ''}`}\r\n                >\r\n                  {message.type === 'message' && (\r\n                    <div className=\"message-header\">\r\n                      <span className=\"message-sender\">{message.sender}</span>\r\n                      <span className=\"message-time\">{formatTimestamp(message.timestamp)}</span>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"message-content\">{message.content}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            <form className=\"chat-input-form\" onSubmit={handleChatSubmit}>\r\n              <div className=\"chat-input-container\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={messageInput}\r\n                  onChange={(e) => setMessageInput(e.target.value)}\r\n                  placeholder=\"Type a message...\"\r\n                  className=\"chat-input\"\r\n                />\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"emoji-button\"\r\n                  onClick={() => setShowEmojiPicker(!showEmojiPicker)}\r\n                >\r\n                  <FaSmile />\r\n                </button>\r\n                {showEmojiPicker && (\r\n                  <div className=\"emoji-picker\">\r\n                    {commonEmojis.map(emoji => (\r\n                      <button\r\n                        key={emoji}\r\n                        type=\"button\"\r\n                        className=\"emoji\"\r\n                        onClick={() => handleReactionClick(emoji)}\r\n                      >\r\n                        {emoji}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <button type=\"submit\" className=\"send-button\">Send</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Reaction display */}\r\n      {currentReaction && (\r\n        <div className=\"reaction-display\">\r\n          <div className=\"reaction-emoji\">{currentReaction.emoji}</div>\r\n          <div className=\"reaction-username\">{currentReaction.username}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WatchParty; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}